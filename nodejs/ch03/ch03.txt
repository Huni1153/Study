js의 객체와 함수를 이해하자 
	js에서는 변수의 자료형을 명시하지 않고 "var"라고 하는 예약어 하나로 사용한다. 
	하지만, js에서 자료형의 개념은 존재한다.
	js에서의 자료형
		Boolean : true와 false의 두가지 값을 가지는 자료형
		Number : 64비트 IEEE 754값이며 정수나 부동소수 값을 가지는 자료형 ( NaN ; 숫자가 아님, +무한대, -무한대 ( Number.MAX_VALUE, Number.MIN_VALUE ) 
		String : 문자열 값을 갖는 자료형
		undefined : 값을 할당하지 않는 값 ( 초기화 되지 않은 값 )
		null : 존재하지 않는 값
		Object : 객체를 값으로 가지는 자료형 ( Array, Date, etc... )
	typeof 연산자를 이용하여 자료형을 확인할 수 있다.
	각 자료형의 변환을 위한 메소드도 존재한다. ( parseInt(), parseFloat() )

js에서 객체를 생성하는 방법
	1. var Person = {}; 이렇게 빈 객체를 생성가능하다.
	2. var Person = {
		age : 20,
		name : "소녀시대",
		add : function( a, b ) {
			return a + b;
		}
	};
	처럼 객체내부에 json 형태로 속성이름과 속성값을 지정하여 초기화할 수 있다.

js에서 객체의 속성에 접근하는 방법
	객체는 여러가지 속성값들을 가질수 있다. 객체, 변수, 함수 등등.. 
	이러한 값들은 객체내부에서 속성의 이름에 대입을 하고 해당 이름에 접근함으로서 사용이 가능하다.

	객체에서 속성값에 접근하는 방법
		1. 객체이름 뒤에 "."을 붙이고 속성 이름을 적어 접근
			ex) object.attribute
		2. 객체 뒤에 "[]"를 붙이고, 내부에 ""를 이용하여 속성이름으로 접근
			ex) object[ "attribute" ]


js에서 함수
	1. 자바스크립트에서는 함수의 반환값의 자료형을 명시하지않는다.
	2. 함수라는 명시를 위해 function 이라는 예약어를 붙인다.
	3. 변수에 함수를 할당할 수 있다.

	함수를 정의하는 방법 2가지
	1. 다른언어와 같이 정의를 한다.
	function add( a, b ) {
		return a + b;
	}
	2. 변수에 할당하면서 정의한다.
	var add = function( a, b ) {
		return a + b;
	};
		2번의 경우 function 다음에 매개변수를 바로 받고 있어서 함수의 이름을 따로 명시하지 않았는데 이러한 함수를 익명 함수( Anonymous function )이라고 한다. 또한 익명함수를 변수에 대입하는 표현식이기 때문에 명시적으로 함수 정의 끝에 세미콜론을 붙여주는게 일관성이있어서 추천하는 바이다.


객체에 함수를 할당하여 사용가능하다.
	js에서는 함수도 변수에 할당을 할 수 있기 때문에 객체의 속성값에도 할당이 가능하다. 
	
